2024-05-28 18:18:03,838{GMT}	INFO	[jepsen test runner] jepsen.core: Test version f19d6895eaa3eba773e51eb5b24e354b1e4d4246 (plus uncommitted changes)
2024-05-28 18:18:03,839{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin /Users/garrettbodley/go/bin/maelstrom-broadcast --node-count 5 --time-limit 20 --rate 10
2024-05-28 18:18:03,902{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 5
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x2a2f7a61"
         "maelstrom.db$db$reify__16142@2a2f7a61"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x61d1315b" "2024-05-28T18:18:03.796-04:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x49d5b651"
         "maelstrom.net$jepsen_net$reify__15251@49d5b651"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x34989ceb"
         "maelstrom.workload.broadcast$client$reify__16644@34989ceb"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x61fb3dae"
         "java.util.concurrent.CyclicBarrier@61fb3dae"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x9c88323"
         "jepsen.checker$compose$reify__11881@9c88323"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "/Users/garrettbodley/go/bin/maelstrom-broadcast"
  "--node-count"
  "5"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@6d4bdb75"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@1dc47df3"]})
 :nodes ["n0" "n1" "n2" "n3" "n4"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "/Users/garrettbodley/go/bin/maelstrom-broadcast"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 20000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x5d41b929"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@5d41b929"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x6dd0e2f4"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@6dd0e2f4"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 1,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x292237cd"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@292237cd"],
           :gen ()})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x797a5b31"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@797a5b31"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x13d7d1a8"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x60035f1e"
         "maelstrom.net$jepsen_os$reify__15254@60035f1e"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-05-28 18:18:05,433{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-05-28 18:18:05,434{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-05-28 18:18:05,435{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-05-28 18:18:05,436{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-05-28 18:18:05,436{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-05-28 18:18:05,436{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-05-28 18:18:05,436{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-05-28 18:18:05,436{GMT}	INFO	[jepsen node n2] maelstrom.process: launching /Users/garrettbodley/go/bin/maelstrom-broadcast []
2024-05-28 18:18:05,436{GMT}	INFO	[jepsen node n3] maelstrom.process: launching /Users/garrettbodley/go/bin/maelstrom-broadcast []
2024-05-28 18:18:05,436{GMT}	INFO	[jepsen node n1] maelstrom.process: launching /Users/garrettbodley/go/bin/maelstrom-broadcast []
2024-05-28 18:18:05,437{GMT}	INFO	[jepsen node n4] maelstrom.process: launching /Users/garrettbodley/go/bin/maelstrom-broadcast []
2024-05-28 18:18:05,438{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-05-28 18:18:05,439{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-05-28 18:18:05,439{GMT}	INFO	[jepsen node n0] maelstrom.process: launching /Users/garrettbodley/go/bin/maelstrom-broadcast []
2024-05-28 18:18:05,464{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-05-28 18:18:05,479{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-05-28 18:18:05,482{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[]
2024-05-28 18:18:05,620{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	0
2024-05-28 18:18:05,788{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-05-28 18:18:05,980{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2024-05-28 18:18:06,095{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2024-05-28 18:18:06,287{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-05-28 18:18:10,626{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:broadcast	0	:net-timeout
2024-05-28 18:18:10,627{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:broadcast	1
2024-05-28 18:18:10,795{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:fail	:read	nil	:net-timeout
2024-05-28 18:18:10,796{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	2
2024-05-28 18:18:10,988{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:fail	:read	nil	:net-timeout
2024-05-28 18:18:10,988{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	3
2024-05-28 18:18:11,096{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:fail	:read	nil	:net-timeout
2024-05-28 18:18:11,097{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2024-05-28 18:18:11,292{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	nil	:net-timeout
2024-05-28 18:18:11,293{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-05-28 18:18:15,638{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:info	:broadcast	1	:net-timeout
2024-05-28 18:18:15,648{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:invoke	:read	nil
2024-05-28 18:18:15,709{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:ok	:read	[0 1]
2024-05-28 18:18:15,798{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:info	:broadcast	2	:net-timeout
2024-05-28 18:18:15,843{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:invoke	:broadcast	4
2024-05-28 18:18:15,929{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:invoke	:broadcast	5
2024-05-28 18:18:15,993{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:info	:broadcast	3	:net-timeout
2024-05-28 18:18:16,059{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:invoke	:broadcast	6
2024-05-28 18:18:16,098{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:fail	:read	nil	:net-timeout
2024-05-28 18:18:16,098{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	7
2024-05-28 18:18:16,293{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	nil	:net-timeout
2024-05-28 18:18:16,294{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-05-28 18:18:20,854{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:info	:broadcast	4	:net-timeout
2024-05-28 18:18:20,869{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:invoke	:broadcast	8
2024-05-28 18:18:20,934{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:info	:broadcast	5	:net-timeout
2024-05-28 18:18:20,935{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:invoke	:read	nil
2024-05-28 18:18:21,064{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:info	:broadcast	6	:net-timeout
2024-05-28 18:18:21,079{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:invoke	:broadcast	9
2024-05-28 18:18:21,103{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:info	:broadcast	7	:net-timeout
2024-05-28 18:18:21,162{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:broadcast	10
2024-05-28 18:18:21,303{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	nil	:net-timeout
2024-05-28 18:18:21,304{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-05-28 18:18:25,873{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:info	:broadcast	8	:net-timeout
2024-05-28 18:18:25,939{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:fail	:read	nil	:net-timeout
2024-05-28 18:18:26,084{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:info	:broadcast	9	:net-timeout
2024-05-28 18:18:26,167{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:info	:broadcast	10	:net-timeout
2024-05-28 18:18:26,306{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	nil	:net-timeout
2024-05-28 18:18:26,306{GMT}	INFO	[jepsen worker 4] jepsen.generator.interpreter: Waiting for recovery...
2024-05-28 18:18:36,313{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-05-28 18:18:36,314{GMT}	INFO	[jepsen worker 3] jepsen.util: 18	:invoke	:read	nil
2024-05-28 18:18:36,314{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:invoke	:read	nil
2024-05-28 18:18:36,314{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:invoke	:read	nil
2024-05-28 18:18:36,315{GMT}	INFO	[jepsen worker 4] jepsen.util: 14	:invoke	:read	nil
2024-05-28 18:18:36,317{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:ok	:read	[1 4 8 0]
2024-05-28 18:18:41,324{GMT}	INFO	[jepsen worker 3] jepsen.util: 18	:fail	:read	nil	:net-timeout
2024-05-28 18:18:41,325{GMT}	INFO	[jepsen worker 4] jepsen.util: 14	:fail	:read	nil	:net-timeout
2024-05-28 18:18:41,325{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:fail	:read	nil	:net-timeout
2024-05-28 18:18:41,325{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	nil	:net-timeout
2024-05-28 18:18:41,392{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-05-28 18:18:41,464{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2024-05-28 18:18:41,464{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2024-05-28 18:18:41,464{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2024-05-28 18:18:41,464{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2024-05-28 18:18:41,464{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2024-05-28 18:18:42,348{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2024-05-28 18:18:42,352{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n2 crashed with exit status 1. Before crashing, it wrote to STDOUT:

{"src":"n2","dest":"c0","body":{"in_reply_to":1,"type":"init_ok"}}
{"src":"n2","dest":"c7","body":{"in_reply_to":1,"type":"topology_ok"}}

And to STDERR:

2024/05/28 18:18:05 Received {c0 n2 {"type":"init","node_id":"n2","node_ids":["n0","n1","n2","n3","n4"],"msg_id":1}}
2024/05/28 18:18:05 Node n2 initialized
2024/05/28 18:18:05 Sent {"src":"n2","dest":"c0","body":{"in_reply_to":1,"type":"init_ok"}}
2024/05/28 18:18:05 Received {c7 n2 {"type":"topology","topology":{"n0":["n3","n1"],"n1":["n4","n2","n0"],"n2":["n1"],"n3":["n0","n4"],"n4":["n1","n3"]},"msg_id":1}}
2024/05/28 18:18:05 Sent {"src":"n2","dest":"c7","body":{"in_reply_to":1,"type":"topology_ok"}}
2024/05/28 18:18:05 Received {n1 n2 {"src":"n1","dest":"n2","body":{"type":"broadcast","message":0,"msg_id":1}}}
2024/05/28 18:18:05 No handler for {"id":24,"src":"n1","dest":"n2","body":{"src":"n1","dest":"n2","body":{"type":"broadcast","message":0,"msg_id":1}}}

Full STDERR logs are available in /Users/garrettbodley/Code/gossip-glomers/maelstrom/store/broadcast/20240528T181803.796-0400/node-logs/n2.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16142.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__8744$G__8725__8748.invoke(db.clj:12)
	at jepsen.db$fn__8744$G__8724__8753.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:1623)
