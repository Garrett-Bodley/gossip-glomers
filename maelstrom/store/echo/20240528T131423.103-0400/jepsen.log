2024-05-28 13:14:23,157{GMT}	INFO	[jepsen test runner] jepsen.core: Test version e062acb3c28c8e365040becc9065228d9eece76c (plus uncommitted changes)
2024-05-28 13:14:23,157{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w echo --bin demo/ruby/echo.rb --time-limit 5
2024-05-28 13:14:23,232{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x27aa700"
         "maelstrom.db$db$reify__16142@27aa700"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "echo"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x2a2f7a61" "2024-05-28T13:14:23.103-04:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x8d40f07"
         "maelstrom.net$jepsen_net$reify__15251@8d40f07"]
 :client
 #object[maelstrom.workload.echo$client$reify__16863
         "0x196c8b93"
         "maelstrom.workload.echo$client$reify__16863@196c8b93"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x307ca947"
         "java.util.concurrent.CyclicBarrier@307ca947"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x61d1315b"
         "jepsen.checker$compose$reify__11881@61d1315b"]
 :argv ("test" "-w" "echo" "--bin" "demo/ruby/echo.rb" "--time-limit" "5")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@49d5b651"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@34989ceb"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "demo/ruby/echo.rb"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 5000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x3d0c88f4"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@3d0c88f4"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x5aad4194"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@5aad4194"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen #object[maelstrom.workload.echo$workload$fn__16882
                                                    "0x50a1c2f3"
                                                    "maelstrom.workload.echo$workload$fn__16882@50a1c2f3"],
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x453ca7f"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x5d41b929"
         "maelstrom.net$jepsen_os$reify__15254@5d41b929"]
 :time-limit 5
 :workload :echo
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-05-28 13:14:24,835{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2024-05-28 13:14:24,836{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-05-28 13:14:24,838{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-05-28 13:14:24,838{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-05-28 13:14:24,838{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-05-28 13:14:24,839{GMT}	INFO	[jepsen node n3] maelstrom.process: launching demo/ruby/echo.rb []
2024-05-28 13:14:24,839{GMT}	INFO	[jepsen node n2] maelstrom.process: launching demo/ruby/echo.rb []
2024-05-28 13:14:24,839{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-05-28 13:14:24,839{GMT}	INFO	[jepsen node n4] maelstrom.process: launching demo/ruby/echo.rb []
2024-05-28 13:14:24,841{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-05-28 13:14:24,840{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2024-05-28 13:14:24,841{GMT}	INFO	[jepsen node n5] maelstrom.process: launching demo/ruby/echo.rb []
2024-05-28 13:14:24,842{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-05-28 13:14:24,843{GMT}	INFO	[jepsen node n1] maelstrom.process: launching demo/ruby/echo.rb []
2024-05-28 13:14:25,286{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-05-28 13:14:25,313{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 50"
2024-05-28 13:14:25,321{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 50", :msg_id 2, :in_reply_to 1}
2024-05-28 13:14:25,420{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 80"
2024-05-28 13:14:25,422{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 80", :msg_id 2, :in_reply_to 1}
2024-05-28 13:14:25,536{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 28"
2024-05-28 13:14:25,537{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 28", :msg_id 3, :in_reply_to 2}
2024-05-28 13:14:25,757{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 52"
2024-05-28 13:14:25,761{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 52", :msg_id 2, :in_reply_to 1}
2024-05-28 13:14:25,804{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 126"
2024-05-28 13:14:25,806{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 126", :msg_id 2, :in_reply_to 1}
2024-05-28 13:14:26,026{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 110"
2024-05-28 13:14:26,029{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 110", :msg_id 4, :in_reply_to 3}
2024-05-28 13:14:26,047{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 53"
2024-05-28 13:14:26,049{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 53", :msg_id 2, :in_reply_to 1}
2024-05-28 13:14:26,127{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 102"
2024-05-28 13:14:26,129{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 102", :msg_id 3, :in_reply_to 2}
2024-05-28 13:14:26,205{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 112"
2024-05-28 13:14:26,207{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 112", :msg_id 4, :in_reply_to 3}
2024-05-28 13:14:26,486{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 7"
2024-05-28 13:14:26,488{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 7", :msg_id 3, :in_reply_to 2}
2024-05-28 13:14:26,855{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 103"
2024-05-28 13:14:26,857{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 103", :msg_id 5, :in_reply_to 4}
2024-05-28 13:14:27,023{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 3"
2024-05-28 13:14:27,026{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 3", :msg_id 6, :in_reply_to 5}
2024-05-28 13:14:27,299{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 64"
2024-05-28 13:14:27,301{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 64", :msg_id 3, :in_reply_to 2}
2024-05-28 13:14:27,414{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 57"
2024-05-28 13:14:27,416{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 57", :msg_id 7, :in_reply_to 6}
2024-05-28 13:14:27,595{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 92"
2024-05-28 13:14:27,596{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 92", :msg_id 4, :in_reply_to 3}
2024-05-28 13:14:27,848{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 100"
2024-05-28 13:14:27,849{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 100", :msg_id 3, :in_reply_to 2}
2024-05-28 13:14:28,157{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 42"
2024-05-28 13:14:28,159{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 42", :msg_id 5, :in_reply_to 4}
2024-05-28 13:14:28,194{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 62"
2024-05-28 13:14:28,196{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 62", :msg_id 4, :in_reply_to 3}
2024-05-28 13:14:28,200{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 127"
2024-05-28 13:14:28,202{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 127", :msg_id 5, :in_reply_to 4}
2024-05-28 13:14:28,356{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 3"
2024-05-28 13:14:28,359{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 3", :msg_id 4, :in_reply_to 3}
2024-05-28 13:14:28,426{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 112"
2024-05-28 13:14:28,428{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 112", :msg_id 6, :in_reply_to 5}
2024-05-28 13:14:28,739{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 8"
2024-05-28 13:14:28,740{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 8", :msg_id 5, :in_reply_to 4}
2024-05-28 13:14:28,992{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 91"
2024-05-28 13:14:28,994{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 91", :msg_id 7, :in_reply_to 6}
2024-05-28 13:14:29,372{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 26"
2024-05-28 13:14:29,374{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 26", :msg_id 6, :in_reply_to 5}
2024-05-28 13:14:29,736{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 107"
2024-05-28 13:14:29,737{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 107", :msg_id 6, :in_reply_to 5}
2024-05-28 13:14:30,067{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 12"
2024-05-28 13:14:30,069{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 12", :msg_id 5, :in_reply_to 4}
2024-05-28 13:14:30,087{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-05-28 13:14:30,138{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2024-05-28 13:14:30,138{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2024-05-28 13:14:30,138{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2024-05-28 13:14:30,138{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2024-05-28 13:14:30,138{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2024-05-28 13:14:31,070{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2024-05-28 13:14:31,072{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2024-05-28 13:14:31,369{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2024-05-28 13:14:31,376{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/garrettbodley/Code/gossip-glomers/maelstrom/store/echo/20240528T131423.103-0400/results.edn
2024-05-28 13:14:31,400{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 26,
         :ok-count 26,
         :fail-count 0,
         :info-count 0,
         :by-f {:echo {:valid? true,
                       :count 26,
                       :ok-count 26,
                       :fail-count 0,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 1.0},
 :net {:all {:send-count 62,
             :recv-count 62,
             :msg-count 62,
             :msgs-per-op 2.3846154},
       :clients {:send-count 62, :recv-count 62, :msg-count 62},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:valid? true, :errors ()},
 :valid? true}


Everything looks good! ヽ(‘ー`)ノ
